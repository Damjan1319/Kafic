generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model menu_items {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  category    String        @db.VarChar(50)
  price       Decimal       @db.Decimal(10, 2)
  description String?
  stock       Int?          @default(0)
  available   Boolean?      @default(true)
  createdAt   DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?     @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  order_items order_items[]

  @@map("menu_items")
}

model order_items {
  id         Int        @id @default(autoincrement())
  order_id   Int
  item_id    Int
  name       String     @db.VarChar(100)
  price      Decimal    @db.Decimal(10, 2)
  quantity   Int
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  menu_items menu_items @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders     orders     @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  id           Int           @id @default(autoincrement())
  table_id     Int
  order_number Int
  total_price  Decimal       @db.Decimal(10, 2)
  status       String?       @default("pending")
  waiter_id    Int?
  created_at   DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @default(now()) @db.Timestamptz(6)
  order_items  order_items[]
  tables       tables        @relation(fields: [table_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  waiters      waiters?      @relation(fields: [waiter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tables {
  id                  Int       @id @default(autoincrement())
  table_number        Int       @unique
  qr_code             String    @unique @db.VarChar(100)
  location            String?   @default("indoor")
  x_position          Int?      @default(0)
  y_position          Int?      @default(0)
  current_order_count Int?      @default(0)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  orders              orders[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model waiters {
  id               Int                 @id @default(autoincrement())
  username         String              @unique @db.VarChar(50)
  password         String              @db.VarChar(255)
  name             String              @db.VarChar(100)
  role             String?             @default("waiter")
  created_at       DateTime?           @default(now()) @db.Timestamptz(6)
  orders           orders[]
  WaiterStatistics waiter_statistics[] // Add this line for the relation
}

model waiter_statistics {
  id            Int       @id @default(autoincrement())
  waiter_id     Int
  date          DateTime  @db.Date
  shift_start   DateTime
  shift_end     DateTime?
  total_orders  Int       @default(0)
  total_revenue Decimal   @default(0) @db.Decimal(10, 2)
  items_sold    Json?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt @db.Timestamp(6)

  waiter waiters @relation(fields: [waiter_id], references: [id], onDelete: Cascade)

  @@unique([waiter_id, date])
  @@map("waiter_statistics")
}
